commit ea25ffddf775aa4bc4ea4bb7ac96321e9943c188
Author: Daniel P. Berrange <berrange@redhat.com>
Date:   Wed Apr 4 10:35:38 2012 +0100

    Fix some return types in the docs
    
    All hash tables are returned as hash references, so the
    docs should use $info, not %info

diff --git a/lib/Sys/Virt/Domain.pm b/lib/Sys/Virt/Domain.pm
index b55a204..25a76f2 100644
--- a/lib/Sys/Virt/Domain.pm
+++ b/lib/Sys/Virt/Domain.pm
@@ -552,10 +552,10 @@ to query the setting of the live config or inactive config.
 
 Return the scheduler type for the guest domain
 
-=item %stats = $dom->block_stats($path)
+=item $stats = $dom->block_stats($path)
 
 Fetch the current I/O statistics for the block device given by C<$path>.
-The returned hash contains keys for
+The returned hash reference contains keys for
 
 =over 4
 
@@ -581,9 +581,11 @@ Some kind of error count
 
 =back
 
-=item my %params = $dom->get_scheduler_parameters($flags=0)
+=item my $params = $dom->get_scheduler_parameters($flags=0)
 
-Return the set of scheduler tunable parameters for the guest.
+Return the set of scheduler tunable parameters for the guest,
+as a hash reference. The precise set of keys in the hash
+are specific to the hypervisor.
 
 =item $dom->set_scheduler_parameters($params, $flags=0)
 
@@ -615,7 +617,7 @@ Update the blkio tunable parameters for the guest. The
 C<$params> should be a hash reference whose keys are one
 of the BLKIO PARAMETERS constants.
 
-=item %stats = $dom->get_block_iotune($disk, $flags=0)
+=item $stats = $dom->get_block_iotune($disk, $flags=0)
 
 Return a hash reference containing the set of blkio tunable
 parameters for the guest disk C<$disk>. The keys in the hash
@@ -742,12 +744,13 @@ Total memory seen by guest
 
 =back
 
-=item %info = $dom->get_security_label()
+=item $info = $dom->get_security_label()
 
 Fetch information about the security label assigned to the guest
-domain. The returned hash has two keys, C<model> gives the name
-of the security model in effect (eg C<selinux>), while C<label>
-provides the name of the security label applied to the domain.
+domain. The returned hash reference has two keys, C<model> gives
+the name of the security model in effect (eg C<selinux>), while
+C<label> provides the name of the security label applied to the
+domain.
 
 =item $ddom = $dom->migrate(destcon, flags, dname, uri, bandwidth)
 
diff --git a/lib/Sys/Virt/StoragePool.pm b/lib/Sys/Virt/StoragePool.pm
index 2337bf5..02f8507 100644
--- a/lib/Sys/Virt/StoragePool.pm
+++ b/lib/Sys/Virt/StoragePool.pm
@@ -150,10 +150,10 @@ and if omitted defaults to zero.
 Delete the storage pool. The C<$flags> parameter allows the data to
 be optionally wiped during delete and if omitted defaults to zero.
 
-=item %info = $pool->get_info()
+=item $info = $pool->get_info()
 
 Retrieve information about the current storage pool state. The
-returned hash has the following keys
+returned hash reference has the following keys
 
 =over 4
 
diff --git a/lib/Sys/Virt/StorageVol.pm b/lib/Sys/Virt/StorageVol.pm
index 998a5a0..41c3cd0 100644
--- a/lib/Sys/Virt/StorageVol.pm
+++ b/lib/Sys/Virt/StorageVol.pm
@@ -118,11 +118,11 @@ to erase data, and should be one of the WIPE ALGORITHM CONSTANTS
 listed later. The C<flags> parameter is currently unused and defaults
 to zero.
 
-=item my %info = $vol->get_info()
+=item my $info = $vol->get_info()
 
 Retrieve live information about the storage volume. The returned
-C<%info> hash contains three keys. C<type> indicates whether the
-volume is a file or block device. C<capacity> provides the maximum
+C<$info> hash reference contains three keys. C<type> indicates whether
+the volume is a file or block device. C<capacity> provides the maximum
 logical size of the volume. C<allocation> provides the current
 physical usage of the volume. The allocation may be less than the
 capacity for sparse, or grow-on-demand volumes. The allocation
